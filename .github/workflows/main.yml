# .github/workflows/main.yml
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      
      - name: Install Angular CLI
        run: |
             cd shopping_frontend
             npm install -g @angular/cli@6.0.8

      - name: Install dependencies
        run: |
             cd shopping_frontend
             npm install

      - name: Build Angular app
        run: |
             cd shopping_frontend
             npm run build --prod

      - name: Copy build to Spring Boot
        run: |          
          mkdir -p shopping/src/main/resources/static
          cp -R shopping_frontend/dist/shopping-app/* shopping/src/main/resources/static/     

      - name: Set Up JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'      

      - name: Build with Maven
        run: |          
          cd shopping
          chmod +x mvnw
          ./mvnw clean package -DskipTests
          
      - name: Install Java 8 on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo yum install -y java-1.8.0-openjdk      
            
      - name: Check if Java process is running
        id: check_java_process
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            pgrep -f 'java -jar /home/ec2-user/shopping/target/shopping-0.0.1-SNAPSHOT.jar' || echo 'not running'
        continue-on-error: true

      - name: Stop Java process if running
        if: steps.check_java_process.outputs.stdout != 'not running'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            pkill -f 'java -jar /home/ec2-user/shopping/target/shopping-0.0.1-SNAPSHOT.jar' || true
        continue-on-error: true
      
      - name: Install And Start ActiveMQ if not running
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            if ps aux | grep -v grep | grep "apache-activemq" > /dev/null; then
              echo "ActiveMQ is already running."
            else
              echo "ActiveMQ is not running. Checking if the folder exists..."
              if [ -d "apache-activemq-5.16.3/bin" ]; then
                echo "ActiveMQ folder already exists. Skipping installation."
              else
                sudo yum install -y wget
                wget https://archive.apache.org/dist/activemq/5.16.3/apache-activemq-5.16.3-bin.tar.gz 
                tar -xzvf apache-activemq-5.16.3-bin.tar.gz
              fi
              cd apache-activemq-5.16.3/bin
              nohup ./activemq console > activemq.log 2>&1 &
            fi
            
      - name: Transfer JAR to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "./shopping/target/shopping-0.0.1-SNAPSHOT.jar"
          target: "/home/ec2-user"

      - name: Run App in the background
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            nohup java -jar /home/ec2-user/shopping/target/shopping-0.0.1-SNAPSHOT.jar > app.log 2>&1 &
